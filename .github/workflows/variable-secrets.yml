name: Exploring variables and secrets
# on: push
on:
  # schedule:
  #   - cron: "*/1 * * * *"
  push:

  workflow_dispatch: 

env:
    CONTAINER_REGISTRY: docker.io
    # DOCKER_USERNAME: parth93
    IMAGE_NAME: dockerize-python-app
jobs:
    ## STEP LEVEL##
    # docker:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Docker build
    #           env:
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: parth93
    #             IMAGE_NAME: github-actions-nginx
    #           run: docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            
    #         - name: Docker login
    #           env:
    #             DOCKER_PASSWORD: sadasdasfsafsfdsfa
    #             DOCKER_USERNAME: parth93
    #           run: docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

    #         - name: Docker publish
    #           run: docker push docker.io/dockerUserName/imageName:latest
    
    # deploy:
    #     needs: docker
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Docker run
    #           env:
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: parth93
    #             IMAGE_NAME: github-actions-nginx
    #           run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

    ## JOB LEVEL##
        # docker:
        
        #     runs-on: ubuntu-latest
        #     env:
        #         CONTAINER_REGISTRY: docker.io
        #         DOCKER_USERNAME: parth93
        #         IMAGE_NAME: github-actions-nginx
                
        #     steps:
        #         - name: Docker build
        #           run: docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
                
        #         - name: Docker login
        #           env:
        #             DOCKER_PASSWORD: sadasdasfsafsfdsfa    
        #           run: docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
    
        #         - name: Docker publish
        #           run: docker push docker.io/$DOCKER_USERNAME/$IMAGE_NAME:latest

        # deploy:
        #     needs: docker
        #     env:
        #         CONTAINER_REGISTRY: docker.io
        #         DOCKER_USERNAME: parth93
        #         IMAGE_NAME: github-actions-nginx
        #     runs-on: ubuntu-latest
        #     steps:
        #         - name: Docker run
        #           run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
                # docker:
        docker:
            runs-on: ubuntu-latest
            steps:
                - name: Docker build
                  run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
                
                - name: Docker login 
                  run: docker login --username=${{ vars.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
    
                - name: Docker publish
                  run: echo docker push docker.io/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

        deploy:
            if: github.ref == 'ref/heads/main'
            needs: docker
            runs-on: ubuntu-latest
            concurrency: 
              group: production deployment
              cancel-in-progress: true
            steps:

                - name: Docker run
                  timeout-minutes: 1
                  run: |
                    docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
                    sleep 600s